% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/preprocessing.R
\name{attach_wfpc}
\alias{attach_wfpc}
\title{Attach Weighted Functional Principal Components to the Data}
\usage{
attach_wfpc(
  mfpca,
  data,
  n = NULL,
  obstime = "obstime",
  marker = "marker",
  eval_weight = FALSE
)
}
\arguments{
\item{mfpca}{MFPCA object from which to extract the weighted FPCS.}

\item{data}{Data set to which the weighted FPCS are to be attached.}

\item{n}{Number of FPCs to attach. Defaults to NULL which corresponds to all
FPCs in mfpc.}

\item{obstime}{Name of the time variable in data set at which points to
evaluate.}

\item{marker}{Name of the marker variable in the data set which separates the
data.}

\item{eval_weight}{Weight the FPC by the square root of its eigenvalue (then
variance comparable throughout all FPCs). Defaults to FALSE.}
}
\value{
Data set supplied as argument \code{data} with additional columns
 corresponding to the evaluations of the MFPC basis.
}
\description{
Attach Weighted Functional Principal Components to the Data
}
\examples{
# Small example based on subset of PBC data
library(MFPCA)
library(bamlss)
data(pbc_subset)

# Estimate MFPC basis and attach to data
mfpca <- preproc_MFPCA(pbc_subset, uni_mean = paste0(
    "logy ~ 1 + sex + drug + s(obstime, k = 5, bs = 'ps') + ",
    "s(age, k = 5, bs = 'ps')"),
    pve_uni = 0.99, nbasis = 5, weights = TRUE, save_uniFPCA = TRUE)
pbc_subset <- attach_wfpc(mfpca, pbc_subset, n = 2)
mfpca_list <- list(
  list(functions = funData::extractObs(mfpca$functions, 1),
       values = mfpca$values[1]),
  list(functions = funData::extractObs(mfpca$functions, 2),
       values = mfpca$values[2]))

# Model formula
f <- list(
  Surv2(survtime, event, obs = logy) ~ -1 +
    s(survtime, k = 5, bs = "ps", xt = list("scale" = FALSE)),
  gamma ~ 1 + s(age, k = 5, bs = "ps") + sex + drug,
  mu ~ -1 + marker + sex:marker + drug:marker +
    s(obstime, by = marker, xt = list('scale' = FALSE), k = 5, bs = 'ps') +
    s(age, by = marker, xt = list('scale' = FALSE), k = 5, bs = 'ps') +
    s(id, fpc.1, bs = 'unc_pcre',
      xt = list('mfpc' = mfpca_list[[1]], 'scale' = FALSE)) +
    s(id, fpc.2, bs = 'unc_pcre',
      xt = list('mfpc' = mfpca_list[[1]], 'scale' = FALSE)),
  sigma ~ -1 + marker,
  alpha ~ -1 + marker
)

# Model fit
b <- bamlss(f, family = mjm_bamlss, data = pbc_subset, timevar = "obstime",
            maxit = 15, n.iter = 15, burnin = 2, thin = 2)
}
